
## 최소 신장 트리 (MST, **Minimum Spanning Tree**)

![image.png](attachment:1ac8867c-f575-4987-95de-3985f6208288:image.png)

- 위 그림과 같이 그래프의 모든 정점을 포함하는 트리를 ‘신장 트리’ 라고 부름
- 신장 트리는 정점의 개수가 n이면 n-1개의 간선을 가짐
- 신장 트리중, 가중치의 합이 가장 최소인 트리가 ‘최소 신장 트리’
- 최소 신장 트리를 만드는 알고리즘은 크루스칼 알고리즘, 프림 알고리즘 이렇게 2개 있음

## 크루스칼 알고리즘(**kruskal**)

- 크루스칼 알고리즘이란?
    1. 그래프 내의 **모든 정점들을 가장 적은 비용으로 연결**하기 위해 사용함(MST)
    2. 즉, 그래프 내의 **모든 정점을 포함하고 사이클이 없는 선을 그렸을 때, 가중치의 합이 최소가 되는 상황을 구하고 싶을 때 사용함**

- 알고리즘 과정
    1. 크기가 가장 작은 간선부터 모든 간선을 살핀다. 이때 간선은 가중치에 대해 오름차순으로 정렬되어 있다.
    2. 간선을 그래프에 포함 했을 때, MST에 사이클이 생기지 않으면 추가한다. 이 과정은 **유니온 파인드(Union-Find)** 알고리즘을 이용한다.
        
        ### **Union-Find 란?**
        
        - Disjoint Set (서로소 집합) 을 표현하는 자료구조
        - 서로 다른 두 집합을 병합하는 Union 연산, 집합 원소가 어떤 집합에 속해있는지 찾는 Find 연산을 지원하기에 이러한 이름이 붙었음
        
    - 참고 : https://chanhuiseok.github.io/posts/algo-33/
